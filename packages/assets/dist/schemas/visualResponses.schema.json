{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://immersive-web/webxr-input-profiles/assets/0.1.0/visualResponses.schema.json",
    "type": "array",
    "description": "The responses array",
    "minItems": 1,
    "additionalItems": false,
    "uniqueItems": true,
    "items": {
        "type": "object",
        "required": ["rootNodeName", "source", "states"],
        "additionalProperties": false,
        "properties": {
            "rootNodeName" : {
                "description": "The node in the asset containing the nodes of this visualization",
                "type": "string"
            },
            "source": {
                "description": "The property name driving this visualization",
                "type": "string",
                "enum": ["xAxis", "yAxis", "button", "state"]
            },
            "states": {
                "description": "The states the visualization applies to",
                "type": "array",
                "minItems": 1,
                "items": {
                    "type": "string",
                    "enum": ["default", "touched", "pressed"]
                }
            },
            "targetNodeName" : {
                "description": "The node in the asset to be modified by this visualization",
                "type": "string"
            },
            "maxNodeName": {
                "description": "Node in the asset representing the effect of the maximum associated value",
                "type": "string"
            },
            "minNodeName": {
                "description": "Node in the asset representing the effect of the minimum associated value",
                "type": "string"
            },
            "property": {
                "type": "string",
                "enum": ["transform", "visibility"]
            }
        },
        "if": {
            "properties": {
                "source": { "enum":["state"] }
            }
        },
        "then": {
            "properties": {
                "property": {
                    "type": "string",
                    "enum": ["transform", "visibility"]
                }
            }
        },
        "else": {
            "properties": {
                "property": {
                    "type": "string",
                    "enum": ["transform"]
                }
            }
        }
    }
}